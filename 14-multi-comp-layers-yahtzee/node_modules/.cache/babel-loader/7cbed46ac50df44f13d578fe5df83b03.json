{"ast":null,"code":"var _jsxFileName = \"/home/stewart/ColtReact/14-multi-comp-layers-yahtzee/src/ScoreTable.js\";\nimport React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance } from \"./Rules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const {\n      scores\n    } = this.props;\n    let totalScore = 0;\n\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n\n    return totalScore;\n  }\n\n  render() {\n    const {\n      scores,\n      doScore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ScoreTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"ScoreTable-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          cellSpacing: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Ones\",\n              score: scores.ones,\n              description: ones.description,\n              doScore: evt => doScore(\"ones\", ones.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Twos\",\n              score: scores.twos,\n              description: twos.description,\n              doScore: evt => doScore(\"twos\", twos.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Threes\",\n              score: scores.threes,\n              description: threes.description,\n              doScore: evt => doScore(\"threes\", threes.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Fours\",\n              score: scores.fours,\n              description: fours.description,\n              doScore: evt => doScore(\"fours\", fours.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Fives\",\n              score: scores.fives,\n              description: fives.description,\n              doScore: evt => doScore(\"fives\", fives.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Sixes\",\n              score: scores.sixes,\n              description: sixes.description,\n              doScore: evt => doScore(\"sixes\", sixes.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"ScoreTable-section ScoreTable-section-lower\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lower\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          cellSpacing: \"0\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Three of Kind\",\n              score: scores.threeOfKind,\n              description: threeOfKind.description,\n              doScore: evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Four of Kind\",\n              score: scores.fourOfKind,\n              description: fourOfKind.description,\n              doScore: evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Full House\",\n              score: scores.fullHouse,\n              description: fullHouse.description,\n              doScore: evt => doScore(\"fullHouse\", fullHouse.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Small Straight\",\n              score: scores.smallStraight,\n              description: smallStraight.description,\n              doScore: evt => doScore(\"smallStraight\", smallStraight.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Large Straight\",\n              score: scores.largeStraight,\n              description: largeStraight.description,\n              doScore: evt => doScore(\"largeStraight\", largeStraight.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Yahtzee\",\n              score: scores.yahtzee,\n              description: yahtzee.description,\n              doScore: evt => doScore(\"yahtzee\", yahtzee.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RuleRow, {\n              name: \"Chance\",\n              score: scores.chance,\n              description: chance.description,\n              doScore: evt => doScore(\"chance\", chance.evalRoll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"TOTAL SCORE: \", this.getTotalScore()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScoreTable;","map":{"version":3,"sources":["/home/stewart/ColtReact/14-multi-comp-layers-yahtzee/src/ScoreTable.js"],"names":["React","Component","RuleRow","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","getTotalScore","scores","props","totalScore","key","render","doScore","description","evt","evalRoll"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n} from \"./Rules\";\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const { scores } = this.props;\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  }\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className='ScoreTable'>\n        <section className='ScoreTable-section'>\n          <h2>Upper</h2>\n          <table cellSpacing='0'>\n            <tbody>\n              <RuleRow\n                name='Ones'\n                score={scores.ones}\n                description={ones.description}\n                doScore={evt => doScore(\"ones\", ones.evalRoll)}\n              />\n              <RuleRow\n                name='Twos'\n                score={scores.twos}\n                description={twos.description}\n                doScore={evt => doScore(\"twos\", twos.evalRoll)}\n              />\n              <RuleRow\n                name='Threes'\n                score={scores.threes}\n                description={threes.description}\n                doScore={evt => doScore(\"threes\", threes.evalRoll)}\n              />\n              <RuleRow\n                name='Fours'\n                score={scores.fours}\n                description={fours.description}\n                doScore={evt => doScore(\"fours\", fours.evalRoll)}\n              />\n              <RuleRow\n                name='Fives'\n                score={scores.fives}\n                description={fives.description}\n                doScore={evt => doScore(\"fives\", fives.evalRoll)}\n              />\n              <RuleRow\n                name='Sixes'\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className='ScoreTable-section ScoreTable-section-lower'>\n          <h2>Lower</h2>\n          <table cellSpacing='0'>\n            <tbody>\n              <RuleRow\n                name='Three of Kind'\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name='Four of Kind'\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name='Full House'\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name='Small Straight'\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={evt =>\n                  doScore(\"smallStraight\", smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name='Large Straight'\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={evt =>\n                  doScore(\"largeStraight\", largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name='Yahtzee'\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name='Chance'\n                score={scores.chance}\n                description={chance.description}\n                doScore={evt => doScore(\"chance\", chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n"]},"metadata":{},"sourceType":"module"}