{"ast":null,"code":"var _jsxFileName = \"/home/stewart/ColtReact/14-multi-comp-layers-yahtzee/src/Game.js\";\nimport React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({\n        length: NUM_DICE\n      }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      isRolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n\n  componentDidMount() {\n    this.animateRoll();\n  }\n\n  animateRoll() {\n    this.setState({\n      isRolling: true\n    }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) => st.locked[i] ? d : Math.ceil(Math.random() * 6)),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      isRolling: false\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if (this.state.rollsLeft > 0 && !this.state.isRolling) {\n      this.setState(st => ({\n        locked: [...st.locked.slice(0, idx), !st.locked[idx], ...st.locked.slice(idx + 1)]\n      }));\n    }\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores,\n        [rulename]: ruleFn(this.state.dice)\n      },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo() {\n    const messages = [\"Zero Rolls Left\", \"1 Roll Left\", \"2 Rolls Left\", \"Starting Round\"];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Game\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"App-title\",\n          children: \"Yahtzee!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"Game-dice-section\",\n          children: [/*#__PURE__*/_jsxDEV(Dice, {\n            dice: this.state.dice,\n            locked: this.state.locked,\n            handleClick: this.toggleLocked,\n            disabled: this.state.rollsLeft === 0,\n            isRolling: this.state.isRolling\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Game-button-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Game-reroll\",\n              disabled: this.state.locked.every(x => x) || this.state.rollsLeft === 0,\n              onClick: this.animateRoll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreTable, {\n        doScore: this.doScore,\n        scores: this.state.scores\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/stewart/ColtReact/14-multi-comp-layers-yahtzee/src/Game.js"],"names":["React","Component","Dice","ScoreTable","NUM_DICE","NUM_ROLLS","Game","constructor","props","state","dice","Array","from","length","locked","fill","rollsLeft","isRolling","scores","ones","undefined","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","roll","bind","doScore","toggleLocked","animateRoll","componentDidMount","setState","setTimeout","evt","st","map","d","i","Math","ceil","random","idx","slice","rulename","ruleFn","displayRollInfo","messages","render","every","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      isRolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n\n  componentDidMount() {\n    this.animateRoll();\n  }\n\n  animateRoll(){\n    this.setState(\n      {isRolling: true}, ()=> {\n        setTimeout(this.roll, 1000);\n      }\n    );\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      isRolling: false,\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if(this.state.rollsLeft > 0 && !this.state.isRolling){\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo(){\n    const messages = [\n      \"Zero Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ]\n  }\n\n  render() {\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n\n          <section className='Game-dice-section'>\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n              disabled={this.state.rollsLeft === 0}\n              isRolling={this.state.isRolling}\n            />\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={this.state.locked.every(x => x) || this.state.rollsLeft === 0}\n                onClick={this.animateRoll}\n              >\n                {/* {this.state.rollsLeft} Rerolls Left */}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={this.state.scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}